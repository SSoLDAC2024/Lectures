# Basic Query

PREFIX bot: <https://w3id.org/bot#>
PREFIX spatial: <http://example.org/spatial#>

SELECT ?element
FROM <http://example.org/absolute-position>
WHERE {
  ?element a bot:element ;
           spatial:hasX ?x ;
           spatial:hasY ?y ;
           spatial:hasZ ?z .
  
  FILTER (
    ?x >= -0.5 && ?x <= 1.5 &&
    ?y >= -0.5 && ?y <= 1.5 &&
    ?z >= -0.5 && ?z <= 1.5
  )
}


# Query with Variables

PREFIX bot: <https://w3id.org/bot#>
PREFIX spatial: <http://example.org/spatial#>

SELECT ?element
FROM <http://example.org/absolute-position>
WHERE {
  # Define the point (0.5, 0.5, 0.5) and radius (1)
  VALUES (?centerX ?centerY ?centerZ ?radius) { (3.5 3.5 3.5 1) }

  ?element a bot:element ;
           spatial:hasX ?x ;
           spatial:hasY ?y ;
           spatial:hasZ ?z .
  
  FILTER (
    (?x >= ?centerX - ?radius) && (?x <= ?centerX + ?radius) &&
    (?y >= ?centerY - ?radius) && (?y <= ?centerY + ?radius) &&
    (?z >= ?centerZ - ?radius) && (?z <= ?centerZ + ?radius)
  )
}

# Query distances

PREFIX bot: <https://w3id.org/bot#>
PREFIX spatial: <http://example.org/spatial#>
PREFIX inst: <http://example.org/instances#>
PREFIX ofn: <http://www.ontotext.com/sparql/functions/>

SELECT  ?distance
FROM <http://example.org/absolute-position>
WHERE {

  inst:cube_1 a bot:element ;
           spatial:hasX ?x1 ;
           spatial:hasY ?y1 ;
           spatial:hasZ ?z1 .

  inst:cube_2 a bot:element ;
          spatial:hasX ?x2 ;
          spatial:hasY ?y2 ;
          spatial:hasZ ?z2 ;
  
  BIND((?x2 - ?x1) AS ?dx)
  BIND((?y2 - ?y1) AS ?dy)
  BIND((?z2 - ?z1) AS ?dz)

  BIND((?dx * ?dx) + (?dy * ?dy) + (?dz * ?dz) AS ?sumOfSquares)
  BIND(ofn:sqrt(?sumOfSquares) AS ?distance)
}